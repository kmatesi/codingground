<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CapitalOne</name>
    </assembly>
    <members>
        <member name="T:CapitalOne.Program">
            <summary>
            This is the main class of the program that contains the entry point for the program.
            </summary>
            <remarks>
            A new instance of the XmlProcess class will be instantiated. Then it will be used to
            generate a xml string from the response of a HTTP GET query. Then a new Standings object
            is instantiated by deserializing the xml string. If the deserialization was successful,
            then a conference report is printed out, followed by a report of all the teams in a
            division.
            </remarks>
        </member>
        <member name="F:CapitalOne.Program.FORMAT">
            <summary>
            Format for the two reports generated by this program.
            </summary>
        </member>
        <member name="M:CapitalOne.Program.Main(System.String[])">
            <summary>
            The entry point for the program.
            </summary>
            <param name="args">unused</param>
        </member>
        <member name="M:CapitalOne.Program.displayAllTeams(CapitalOne.Standings)">
            <summary>
            This method will print out a report for all the teams
            in a division.
            </summary>
            <remarks>
            This method will first pull all of the Team objects into
            a generic list, which will then be sorted using a recursive
            quick sort algorithm. Then the report will print out the teams
            in descending order, based on win percentage,
            wins, net points, alphabetically. In addition to printing out to the 
            console, a file will be created with a copy of the report.
            </remarks>
            <param name="s">
            Standings object that contains all of the conferences and
            associated teams.
            </param>
        </member>
        <member name="M:CapitalOne.Program.displayConference(CapitalOne.Standings,System.String)">
            <summary>
            This method will print out a report for all the teams
            in a specific conference.
            </summary>
            <remarks>
            This method will first search through the standings object for
            the matching conference object. If found, all the teams will be printed
            out (they are already in order). If not found, a message will be printed
            to alert the user. In addition to printing out to the console, a file will
            be created with a copy of the report.
            </remarks>
            <param name="s">Standings object that holds all of the teams</param>
            <param name="conference">Conference ID of the conference to print out</param>
        </member>
        <member name="M:CapitalOne.Program.sort(System.Collections.Generic.List{CapitalOne.Team},System.Int32,System.Int32)">
            <summary>
            Recursively quick sort a generic list object.
            </summary>
            <remarks>
            This program will use recursive quick sort algorithm to efficiently
            sort the list of teams in descending order.
            </remarks>
            <param name="teamList">List of Team objects to be sorted</param>
            <param name="left">Where to start sorting</param>
            <param name="right">Where to stop sorting</param>
        </member>
        <member name="M:CapitalOne.Program.listTeams(CapitalOne.Standings)">
            <summary>
            Method to convert a Standings object into a generic list of Team objects.
            </summary>
            <remarks>
            This method will first create a new Generic List of type Team. Then,
            by two foreach loops, it will cycle through all the teams in the 
            Standings object, and add them to a generic list. This list will
            be unsorted.
            </remarks>
            <param name="s">Standings object to convert into a List of Team objects</param>
            <returns>The unordered list of Team Objects</returns>
        </member>
        <member name="T:CapitalOne.Standings">
            <summary>
            Standings class for the root level in the SportsData standings xml document.
            </summary>
            <remarks>
            This class will make use of three different tags to associate each property with
            its Xml object type. This class is the root of the xml document, where an element
            is subsequent class and an attribute is a value. Each xml object has get and set
            properties associated with it.
            </remarks>
        </member>
        <member name="P:CapitalOne.Standings.Division">
            <summary>
            division object that will contain division, conferences, and teams data
            </summary>
        </member>
        <member name="P:CapitalOne.Standings.Season">
            <summary>
            year of seasons standings
            </summary>
            <value>2014</value>
        </member>
        <member name="P:CapitalOne.Standings.Type">
            <summary>
            type of the season
            </summary>
            <value>REG</value>
        </member>
        <member name="T:CapitalOne.Division">
            <summary>
            class that holds all division related data, and an array of associated conferences
            </summary>
            <remarks>
            This class will make use of two different tags to associate each property with
            its Xml object type. An element is subsequent class and an attribute is a value. 
            Each xml object has get and set properties associated with it.
            </remarks>
        </member>
        <member name="P:CapitalOne.Division.Conference">
            <summary>
            An array of Conference objects that will contain related conference and team data
            </summary>
        </member>
        <member name="P:CapitalOne.Division.Id">
            <summary>
            unique id associated with the division
            </summary>
            <value>FBS</value>
        </member>
        <member name="P:CapitalOne.Division.Name">
            <summary>
            name of the division
            </summary>
            <value>I-A</value>
        </member>
        <member name="T:CapitalOne.Conference">
            <summary>
            class that holds all conference related data, and an array of associated teams
            </summary>
            <remarks>
            This class will make use of two different tags to associate each property with
            its Xml object type. An element is subsequent class and an attribute is a value. 
            Each xml object has get and set properties associated with it.
            </remarks>
        </member>
        <member name="P:CapitalOne.Conference.Team">
            <summary>
            an array of Team objects that contain team related data (eg. wins and losses)
            </summary>
        </member>
        <member name="P:CapitalOne.Conference.Id">
            <summary>
            unique id associated with the conference
            </summary>
            <value>ACC</value>
        </member>
        <member name="P:CapitalOne.Conference.Name">
            <summary>
            name of the conference
            </summary>
            <value>ACC</value>
        </member>
        <member name="T:CapitalOne.Team">
            <summary>
            class that holds all division related data, and an array of associated conferences
            </summary>
            <remarks>
            This class will make use of two different tags to associate each property with
            its Xml object type. An element is subsequent class and an attribute is a value. 
            Each xml object has get and set properties associated with it.
            
            In addition, the &lt;,&lt;=,&gt;,&gt;= operators are overloaded to allow for comparing of
            Team objects. This will be used in the quick sort method.
            </remarks>
        </member>
        <member name="M:CapitalOne.Team.op_GreaterThan(CapitalOne.Team,CapitalOne.Team)">
            <summary>
            Compares two Team objects to see if the left operand is greater than the right operand
            </summary>
            <remarks>
            A Team object is greater if it belongs higher in a list in descending order. The 
            comparison will check the following variables for each object. If the two have
            equivalent values, then it will move on to the next variable to check. If they are
            still equal after the last comparison, it is considered to be less than. Check 
            winning percentage, wins, net points, alphabetical order, in that order.
            </remarks>
            <param name="t1">left operand</param>
            <param name="t2">right operand</param>
            <returns>true if t1 is greater than t2, else false</returns>
        </member>
        <member name="M:CapitalOne.Team.op_GreaterThanOrEqual(CapitalOne.Team,CapitalOne.Team)">
            <summary>
            Compares two Team objects to see if the left operand is greater than or 
            equal to the right operand
            </summary>
            <remarks>
            A Team object is greater or equal if it belongs higher in a list in descending order. The 
            comparison will check the following variables for each object. If the two have
            equivalent values, then it will move on to the next variable to check. If they are
            still equal after the last comparison, it is considered to be greater than. Check 
            winning percentage, wins, net points, alphabetical order, in that order.
            </remarks>
            <param name="t1">left operand</param>
            <param name="t2">right operand</param>
            <returns>true if t1 is greater than or equal to t2, else false</returns>
        </member>
        <member name="M:CapitalOne.Team.op_LessThan(CapitalOne.Team,CapitalOne.Team)">
            <summary>
            Compares two Team objects to see if the left operand is less than the right operand
            </summary>
            <remarks>
            A Team object is less than if it belongs lower in a list in descending order. The 
            comparison will check the following variables for each object. If the two have
            equivalent values, then it will move on to the next variable to check. If they are
            still equal after the last comparison, it is considered to be greater than. Check 
            winning percentage, wins, net points, alphabetical order, in that order.
            </remarks>
            <param name="t1">left operand</param>
            <param name="t2">right operand</param>
            <returns>true if t1 is less than t2, else false</returns>
        </member>
        <member name="M:CapitalOne.Team.op_LessThanOrEqual(CapitalOne.Team,CapitalOne.Team)">
            <summary>
            Compares two Team objects to see if the left operand is less than or 
            equal to the right operand
            </summary>
            <remarks>
            A Team object is less than or equal to if it belongs lower in a list in descending 
            order. The comparison will check the following variables for each object. If the two have
            equivalent values, then it will move on to the next variable to check. If they are
            still equal after the last comparison, it is considered to be less than. Check 
            winning percentage, wins, net points, alphabetical order, in that order.
            </remarks>
            <param name="t1">left operand</param>
            <param name="t2">right operand</param>
            <returns>true if t1 is less than t2, else false</returns>
        </member>
        <member name="P:CapitalOne.Team.Id">
            <summary>
            unique id associated to a team
            </summary>
            <value>FSU</value>
        </member>
        <member name="P:CapitalOne.Team.Name">
            <summary>
            name of a team
            </summary>
            <value>Seminoles</value>
        </member>
        <member name="P:CapitalOne.Team.Market">
            <summary>
            institution associated with the team
            </summary>
            <value>Florida State</value>
        </member>
        <member name="P:CapitalOne.Team.Subdivision">
            <summary>
            subdivision for the team
            </summary>
            <value>ACC-ATLANTIC</value>
        </member>
        <member name="P:CapitalOne.Team.Overall">
            <summary>
            overall record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.In_Conference">
            <summary>
            in conference record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Non_Conference">
            <summary>
            non conference record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.In_Division">
            <summary>
            in division record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Home">
            <summary>
            home record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Away">
            <summary>
            away record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Overtime">
            <summary>
            overtime record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Grass">
            <summary>
            record stats playing on grass
            </summary>
        </member>
        <member name="P:CapitalOne.Team.turf">
            <summary>
            record stats playing on turf
            </summary>
        </member>
        <member name="P:CapitalOne.Team.By_7_Points">
            <summary>
            record stats on games won by at least 7 points
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Leading_At_Half">
            <summary>
            record stats when leadin at half
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Last_5">
            <summary>
            record stats of last 5 games
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Points">
            <summary>
            points the team has allowed and scored
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Touchdowns">
            <summary>
            touchdowns the team has allowed and scored
            </summary>
        </member>
        <member name="P:CapitalOne.Team.Streak">
            <summary>
            current streak the team is on
            </summary>
        </member>
        <member name="T:CapitalOne.Overall">
            <summary>
            class that holds overall record stats
            </summary>
        </member>
        <member name="P:CapitalOne.Overall.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Overall.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Overall.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Overall.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.In_Conference">
            <summary>
            class to hold in conference record data
            </summary>
        </member>
        <member name="P:CapitalOne.In_Conference.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.In_Conference.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.In_Conference.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.In_Conference.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Non_Conference">
            <summary>
            class for non conference record data
            </summary>
        </member>
        <member name="P:CapitalOne.Non_Conference.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Non_Conference.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Non_Conference.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Non_Conference.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.In_Division">
            <summary>
            class that holds in division record data
            </summary>
        </member>
        <member name="P:CapitalOne.In_Division.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.In_Division.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.In_Division.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.In_Division.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Home">
            <summary>
            class that holds home record data
            </summary>
        </member>
        <member name="P:CapitalOne.Home.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Home.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Home.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Home.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Away">
            <summary>
            class that holds away record data
            </summary>
        </member>
        <member name="P:CapitalOne.Away.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Away.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Away.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Away.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Overtime">
            <summary>
            class that contains overtime record data
            </summary>
        </member>
        <member name="P:CapitalOne.Overtime.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Overtime.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Overtime.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Overtime.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Grass">
            <summary>
            class that contains record data playing on grass
            </summary>
        </member>
        <member name="P:CapitalOne.Grass.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Grass.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Grass.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Grass.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.Turf">
            <summary>
            class that holds record data when playing on turf
            </summary>
        </member>
        <member name="P:CapitalOne.Turf.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Turf.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Turf.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Turf.Wpct">
            <summary>
            winning percentage
            </summary>
            <value>0.875</value>
        </member>
        <member name="T:CapitalOne.By_7_Points">
            <summary>
            class that holds record data when up by 7 points
            </summary>
        </member>
        <member name="P:CapitalOne.By_7_Points.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.By_7_Points.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.By_7_Points.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="T:CapitalOne.Leading_At_Half">
            <summary>
            class that holds record data when leading at half
            </summary>
        </member>
        <member name="P:CapitalOne.Leading_At_Half.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Leading_At_Half.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Leading_At_Half.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="T:CapitalOne.Last_5">
            <summary>
            class that holds record data for the last five games
            </summary>
        </member>
        <member name="P:CapitalOne.Last_5.Wins">
            <summary>
            number of wins
            </summary>
            <value>11</value>
        </member>
        <member name="P:CapitalOne.Last_5.Losses">
            <summary>
            number of losses
            </summary>
            <value>0</value>
        </member>
        <member name="P:CapitalOne.Last_5.Ties">
            <summary>
            number of ties
            </summary>
            <value>0</value>
        </member>
        <member name="T:CapitalOne.Points">
            <summary>
            class that holds points data for a team
            </summary>
        </member>
        <member name="P:CapitalOne.Points.For">
            <summary>
            points scored
            </summary>
            <value>854</value>
        </member>
        <member name="P:CapitalOne.Points.Against">
            <summary>
            points given up
            </summary>
            <value>654</value>
        </member>
        <member name="P:CapitalOne.Points.Net">
            <summary>
            difference between points for and points against
            </summary>
            <value>200</value>
        </member>
        <member name="T:CapitalOne.Touchdowns">
            <summary>
            class that holds touchdown data for a team
            </summary>
        </member>
        <member name="P:CapitalOne.Touchdowns.For">
            <summary>
            touchdowns the team has scored
            </summary>
            <value>47</value>
        </member>
        <member name="P:CapitalOne.Touchdowns.Against">
            <summary>
            touchdowns the team has given up
            </summary>
            <value>30</value>
        </member>
        <member name="T:CapitalOne.Streak">
            <summary>
            class that holds data related to a teams current streak
            </summary>
        </member>
        <member name="P:CapitalOne.Streak.Type">
            <summary>
            The type of streak either win, or loss
            </summary>
            <value>loss</value>
        </member>
        <member name="P:CapitalOne.Streak.Value">
            <summary>
            the number of games associated with the type of streak
            </summary>
            <value>4</value>
        </member>
        <member name="T:CapitalOne.XmlProcess">
            <summary>
            Class that will be used to send HTTP Requests, and retrieve data in an xml format.
            </summary>
            <remarks>
            This is class provides the capacity to issue an HTTP GET request to the SportsData Standings API
            and retrieve an xml output. In addition, this class can work with the Standings class to deserialize
            the xml into a Standings heiarchical object.
            </remarks>
        </member>
        <member name="F:CapitalOne.XmlProcess.SCHEMA">
            <summary>
            This is the schema layout for the Standins API.
            </summary>
            <remarks>
            This will be used when deserializing the xml into a Standings object. This reference should not change
            which is why it is defined as a constant.
            </remarks>
        </member>
        <member name="F:CapitalOne.XmlProcess.KEY">
            <summary>
            This is the key that will be needed to gain access to the requested data.
            </summary>
            <remarks>
            This is set a a readonly property. When a XmlProcess object is defined, this
            will need to be supplied to the constructor, if a different key than the one
            provided for the mind sumo challenge.
            </remarks>
        </member>
        <member name="F:CapitalOne.XmlProcess.ACCESSLVL">
            <summary>
            This is the access level used in the HTTP request.
            </summary>
            <remarks>
            This is set a a readonly property. When a XmlProcess object is defined, this
            will need to be supplied to the constructor, if a different access level than 
            the one provided for the mind sumo challenge.
            </remarks>
        </member>
        <member name="F:CapitalOne.XmlProcess.VERSION">
            <summary>
            This is the version number that is associated with the access level
            for an HTTP request.
            </summary>
            <remarks>
            This is set a a readonly property. When a XmlProcess object is defined, this
            will need to be supplied to the constructor, if a different version number 
            than the one provided for the mind sumo challenge.
            </remarks>
        </member>
        <member name="M:CapitalOne.XmlProcess.#ctor">
            <summary>
            Default constructor that sets readonly properties for HTTP requests.
            </summary>
            <remarks>
            The default constructor will set the readonly properties to the 
            given values for the mind sumo challenge
            </remarks>
        </member>
        <member name="M:CapitalOne.XmlProcess.#ctor(System.String,System.String,System.String)">
            <summary>
            Overload constructor that sets the readonly properties for the HTTP requests.
            </summary>
            <param name="K">Key value to use for HTTP Request</param>
            <param name="A">Access level value to use for HTTP Request</param>
            <param name="V">Version value to use for HTTP Request</param>
        </member>
        <member name="M:CapitalOne.XmlProcess.GetXmlResponse(System.String,System.String,System.String)">
            <summary>
            Method to send HTTP request to Standings API and retrieve xml string.
            </summary>
            <remarks>
            This method can only be used to query the Standings API. It will first
            build the string for the HTTP request, and then use the a WebRequest and
            WebResponse object to query and retrieve the data.
            </remarks>
            <param name="division">The division for the conference and teams you want (eg. FBS or FCS)</param>
            <param name="year">The year of the data that you are trying to retrieve</param>
            <param name="season">The part of the season for the data (eg. REG for regular season)</param>
            <returns>The querired data in xml format, or null if there was an error in the request</returns>
        </member>
        <member name="M:CapitalOne.XmlProcess.deserializeXml(System.String)">
            <summary>
            Deserialize standings xml data into Standings object.
            </summary>
            <remarks>
            This method will make use of the Standings class, and all
            subsequent classes to deserialize the Standings xml data. It
            will use the schema from the SportsData site to deserialize the
            data into the Standings object.
            </remarks>
            <param name="xml">the xml string to deserialize into a Standings object</param>
            <returns>A standings object with all the associated conferences and teams, or null if it fails</returns>
        </member>
        <member name="P:CapitalOne.XmlProcess.Key">
            <summary>
            Property for the API Key.
            </summary>
            <remarks>
            This is mainly for debugging purposes.
            </remarks>
        </member>
    </members>
</doc>
